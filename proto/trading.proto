// trading.proto

syntax = "proto3";

package trading;

enum Side {
  SIDE_UNSPECIFIED = 0;
  SIDE_BUY = 1;
  SIDE_SELL = 2;
}

// --- Concrete Message Definitions ---
// These are the actual data payloads.

message PlaceLimitOrder {
  uint64 user_id = 1;
  Side side = 2;
  uint64 price = 3;
  uint64 quantity = 4;
}

message OrderAccepted {
  uint64 order_id = 1;
  uint64 user_id = 2;
  Side side = 3;
  uint64 price = 4;
  uint64 quantity = 5;
}

message TradeOccurred {
  uint64 taker_order_id = 1;
  uint64 maker_order_id = 2;
  uint64 quantity = 3;
  uint64 price = 4;
}

// --- The Envelope Message ---
// This is the ONLY message type we will actually send over the wire/channel.

message WireMessage {
  oneof payload {
    // Use distinct number ranges for commands vs. events for clarity.
    // Commands: 1-100
    PlaceLimitOrder place_limit_order = 1;
    // e.g., CancelOrder cancel_order = 2;

    // Events: 101-200
    OrderAccepted order_accepted = 101;
    TradeOccurred trade_occurred = 102;
  }
}
